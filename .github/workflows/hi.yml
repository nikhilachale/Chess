name: GitHub Actions Demo
run-name: ${{ github.actor }} is deploying Chess app üöÄ
on: 
  push:
    branches:
      - main

jobs:
  Redeploy:
    runs-on: ubuntu-latest
    name: Redeploy Chess app to production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test connectivity
        run: |
          echo "Testing network connectivity to server..."
          if timeout 10 ping -c 3 3.110.54.252; then
            echo "‚úÖ Server is pingable"
          else
            echo "‚ö†Ô∏è Ping failed, but server might still be reachable via SSH"
          fi
          
          if timeout 10 nc -z 3.110.54.252 22; then
            echo "‚úÖ SSH port (22) is accessible"
          else
            echo "‚ùå SSH port (22) is not accessible"
            exit 1
          fi

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          timeout 10 ssh-keyscan -H 3.110.54.252 >> ~/.ssh/known_hosts || true

      - name: Deploy using Docker Compose
        run: |
          ssh -i ~/.ssh/deploy_key \
              -o StrictHostKeyChecking=no \
              -o ConnectTimeout=30 \
              -o ServerAliveInterval=10 \
              -o ServerAliveCountMax=3 \
              ec2-user@3.110.54.252 << 'EOF'
          set -e
          echo "‚úÖ Connected to server"

          echo "üìÅ Navigating to project directory..."
          cd ~/Chess || { echo "‚ùå Project directory not found"; exit 1; }

          echo "üì• Pulling latest code..."
          git pull origin main

          echo "üîß Installing dependencies and building UI using npm..."
          if command -v npm >/dev/null 2>&1; then
            echo "Using npm..."
            npm install
            echo "üì¶ Building UI application..."
            cd apps/ui
            npm run build
            cd ../..
          else
            echo "‚ùå npm not found on server!"
            exit 1
          fi

          echo "üì¶ Deploying Chess app with Docker Compose..."
          # Use the docker-compose.yml from the repository
          if [ ! -f docker-compose.yml ]; then
            echo "‚ùå docker-compose.yml not found in repository!"
            exit 1
          fi

          echo "üîÑ Pulling latest Docker images..."
          docker-compose pull

          echo "üõë Stopping existing containers..."
          docker-compose down

          echo "üöÄ Starting containers with latest images..."
          docker-compose up -d

          echo "‚è≥ Waiting for containers to start..."
          sleep 10

          echo "üìä Container status:"
          docker-compose ps

          echo "üîÑ Restarting PM2 processes..."
          if command -v pm2 >/dev/null 2>&1; then
            pm2 restart all
            echo "‚úÖ PM2 processes restarted"
            pm2 list
          else
            echo "‚ö†Ô∏è PM2 not found on server"
          fi

          echo "üéâ Chess app deployed successfully!"
          EOF